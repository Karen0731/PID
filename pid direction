package org.usfirst.frc.team3158.robot.subsystems.PID;

import org.usfirst.frc.team3158.robot.RobotMap;

import com.ctre.CANTalon;

import edu.wpi.first.wpilibj.AnalogInput;
import edu.wpi.first.wpilibj.command.PIDSubsystem;

/**
 *
 */
public class PID extends PIDSubsystem {

	CANTalon motor = RobotMap.PIDmotor;
	AnalogInput pot = RobotMap.PIDpot;
    // Initialize your subsystem here
    public PID() {
    	super ("PID", 0.00, 0.00, 0.00);
    	setAbsoluteTolerance(0.0);
    	getPIDController().setContinuous();
        // Use these to get going:
        // setSetpoint() -  Sets where the PID controller should move the system
        //                  to
        // enable() - Enables the PID controller.
    }

    public void initDefaultCommand() {
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }

    protected double returnPIDInput() {
        // Return your input value for the PID loop
        // e.g. a sensor, like a potentiometer:
        // yourPot.getAverageVoltage() / kYourMaxVoltage;
       
    	return pot.getAverageVoltage();// returns the sensor value that is providing the feedback for the system
    
    }

    protected void usePIDOutput(double output) {
        // Use output to drive your system, like a motor
        // e.g. yourMotor.set(output);
    	
    	motor.pidWrite(output); // this is where the computed output value from the PIDController is applied to the motor
    }
}

